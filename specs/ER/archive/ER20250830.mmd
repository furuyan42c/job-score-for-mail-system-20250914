erDiagram
    %% バイト求人マッチングシステム - マスタ統合版ER図 v3.0
    %% マスタテーブル統合と実データ構造対応
    
    %% ===========================================================================
    %% マスタテーブル関連
    %% ===========================================================================
    
    prefecture_master ||--o{ jobs : "pref_cd"
    prefecture_master ||--o{ city_master : "pref_cd"
    city_master ||--o{ jobs : "city_cd"
    employment_type_master ||--o{ jobs : "employment_type_cd"
    salary_type_master ||--o{ jobs : "salary_type_cd"
    feature_master ||--o{ jobs : "feature_codes contains"
    
    %% ===========================================================================
    %% スコアリング関連
    %% ===========================================================================
    
    semrush_keywords ||--o{ keyword_job_scores : "scores_with"
    jobs ||--o{ keyword_job_scores : "scored_by"
    keyword_job_scores ||--o{ daily_job_picks : "contributes_to"
    
    %% ===========================================================================
    %% ユーザープロファイル・レコメンデーション関連
    %% ===========================================================================
    
    user_actions ||--o{ user_profiles : "aggregated_to"
    user_profiles ||--o{ daily_job_picks : "influences_picking"
    
    %% ===========================================================================
    %% カテゴリ・配信関連
    %% ===========================================================================
    
    job_categories ||--o{ daily_job_picks : "categorizes"
    user_profiles ||--o{ daily_job_picks : "influences_picking"
    daily_job_picks ||--o{ user_delivery_jobs_history : "archived_to_history"
    
    %% ===========================================================================
    %% 基本テーブル関連
    %% ===========================================================================
    
    users ||--o{ user_actions : "performs"
    users ||--o{ daily_job_picks : "receives_picks"
    jobs ||--o{ user_actions : "target_of"
    jobs ||--o{ daily_job_picks : "picked_from"
    
    %% ===========================================================================
    %% スコアリングテーブル定義
    %% ===========================================================================
    
    semrush_keywords {
        serial keyword_id PK "ex: 1"
        string keyword UK "ex: コンビニ バイト"
        string intent "ex: Transactional"
        integer volume "ex: 12000"
        decimal keyword_difficulty "ex: 45.2"
        decimal cpc_usd "ex: 0.85"
        text serp_features "ex: People Also Ask,Related Searches"
        timestamptz imported_at "ex: 2024-08-01 10:00:00+09"
    }
    
    keyword_job_scores {
        uuid score_id PK "ex: 111e2222-e89b-12d3-a456-426614174000"
        integer keyword_id FK "ex: 1→semrush_keywords.keyword_id"
        bigint job_id FK "ex: 421505257→jobs.job_id"
        decimal relevance_score "ex: 85.5"
        jsonb matching_details "ex: {title_match: 0.9, content_match: 0.8, feature_match: 0.7}"
        date scored_date "ex: 2024-08-29"
        string algorithm_version "ex: v2.1"
        timestamptz created_at "ex: 2024-08-29 02:00:00+09"
    }
    
    %% ===========================================================================
    %% カテゴリ・配信テーブル定義
    %% ===========================================================================
    
    job_categories {
        serial category_id PK "ex: 1"
        string category_name "ex: 飲食店スタッフ"
        string category_type "ex: occupation"
        string parent_category "ex: サービス業"
        jsonb matching_criteria "ex: {occupation_cd1s: [100, 101], feature_codes: [103, 104], min_score: 70}"
        decimal weight "ex: 1.2"
        boolean is_active "ex: true"
        text description "ex: 飲食店での接客・調理業務"
        timestamptz created_at "ex: 2024-01-01 00:00:00+09"
    }
    
    user_delivery_jobs_current {
        uuid user_id PK "ex: 550e8400-e29b-41d4-a716-446655440000"
        date delivery_date PK "ex: 2024-08-29"
        bigint job_id "ex: 421505257 (daily_job_picksから複製)"
        string delivery_section "ex: おすすめ求人"
        integer section_rank "ex: 1"
        decimal match_score "ex: 85.5"
        jsonb personalization_factors "ex: {location_match: 0.9, salary_match: 0.8}"
        string delivery_status "ex: ready"
        timestamptz updated_at "ex: 2024-08-29 03:00:00+09"
    }
    
    user_delivery_jobs_history {
        uuid delivery_job_id PK "ex: 456e7890-e89b-12d3-a456-426614174000"
        uuid user_id "ex: 550e8400-e29b-41d4-a716-446655440000 (データのみ、FK制約なし)"
        uuid pick_id FK "ex: 789e0123-e89b-12d3-a456-426614174000→daily_job_picks.pick_id"
        bigint job_id "ex: 421505257"
        date delivery_date "ex: 2024-08-29"
        string delivery_section "ex: おすすめ求人"
        integer section_rank "ex: 1"
        decimal match_score "ex: 85.5"
        jsonb personalization_factors "ex: {location_match: 0.9, salary_match: 0.8}"
        string delivery_status "ex: sent"
        timestamptz delivered_at "ex: 2024-08-29 06:00:00+09"
        timestamptz created_at "ex: 2024-08-29 03:00:00+09"
    }
    
    %% ===========================================================================
    %% マスタテーブル定義
    %% ===========================================================================
    
    prefecture_master {
        integer pref_cd PK "ex: 13"
        string url_segment "ex: tokyo"
        string name "ex: 東京都"
        string region "ex: 関東"
        integer category_id "ex: 42"
    }
    
    city_master {
        integer city_cd PK "ex: 13113"
        integer pref_cd FK "ex: 13"
        string pref_name "ex: 東京都"
        string name "ex: 渋谷区"
        string name_with_gun "ex: 渋谷区"
        string kana "ex: しぶやく"
        decimal latitude "ex: 35.658517"
        decimal longitude "ex: 139.701334"
        boolean is_conflicted_name "ex: false"
        boolean is_special_city "ex: false"
        boolean is_special_city_top "ex: false"
        integer special_city_top_city_cd "ex: null"
    }
    
    employment_type_master {
        integer employment_type_cd PK "ex: 1"
        string group_cd "ex: parttime"
        string json_ld_type "ex: PART_TIME"
        string name "ex: アルバイト"
    }
    
    salary_type_master {
        integer salary_type_cd PK "ex: 1"
        string json_ld_type "ex: HOUR"
        string name "ex: 時給"
    }
    
    feature_master {
        integer feature_cd PK "ex: 100"
        string name "ex: 学歴不問"
        string group_name "ex: ～な人歓迎"
        boolean is_enabled "ex: true"
        text match_keywords "ex: 学歴"
        text ng_keywords "ex: null"
    }
    
    %% ===========================================================================
    %% メインテーブル定義
    %% ===========================================================================
    
    users {
        uuid user_id PK "ex: 550e8400-e29b-41d4-a716-446655440000"
        string email UK "ex: user@example.com"
        string age_range "ex: 20-24"
        string gender "ex: 男性"
        boolean is_active "ex: true"
        timestamptz created_at "ex: 2024-01-15 10:30:00+09"
        timestamptz updated_at "ex: 2024-08-29 14:20:00+09"
    }
    
    user_profiles {
        uuid user_id PK "ex: 550e8400-e29b-41d4-a716-446655440000 (user_actionsから集計)"
        string applied_pref_cds "ex: 13,14,11:3 (user_actionsのappliedから集計)"
        string applied_city_cds "ex: 13113,13104,14101:3 (user_actionsのappliedから集計)"
        string applied_occupation_cd1s "ex: 100,200,300:3 (user_actionsのappliedから集計)"
        string applied_employment_type_cds "ex: 1,2,3:3 (user_actionsのappliedから集計)"
        string applied_salary_type_cds "ex: 1,2:2 (user_actionsのappliedから集計)"
        jsonb applied_salary_stats "ex: {min: 1100, max: 1800, avg: 1420, count: 8}"
        string applied_station_cds "ex: 1001,1002,1003,1004:4 (user_actionsのappliedから集計)"
        string applied_feature_codes "ex: 100,103,104,201,206:5 (user_actionsのappliedから集計)"
        string applied_endcl_cds "ex: EC12345,EC67890,EC11111,EC22222:4 (user_actionsのappliedから集計)"
        jsonb applied_work_schedules "ex: {short_time: 3, morning_shift: 2, night_shift: 1, weekend_only: 2}"
        integer total_applications "ex: 8 (user_actionsのapplied総数)"
        decimal avg_applied_score "ex: 98450.5 (応募求人の平均スコア)"
        decimal avg_applied_fee "ex: 0 (応募求人の平均報酬)"
        boolean prefers_inexperience "ex: true (未経験可求人への応募傾向)"
        timestamptz first_application_at "ex: 2024-02-10 09:15:00+09 (初回応募日時)"
        timestamptz last_application_at "ex: 2024-08-20 16:45:00+09 (最終応募日時)"
        timestamptz profile_updated_at "ex: 2024-08-29 03:00:00+09 (バッチ処理による更新日時)"
        timestamptz created_at "ex: 2024-02-10 09:15:00+09"
    }
    
    jobs {
        bigint job_id PK "ex: 421505257"
        string import_from "ex: indeed"
        string client_cd "ex: CL001"
        string endcl_cd "ex: EC12345"
        string application_cd "ex: AP789"
        string application_name "ex: ＜「ちよだ鮨」の調理&販売スタッフ♪＞"
        string company_name "ex: ちよだ鮨　笹塚店"
        string company_kana "ex: チヨダズシ　ササヅカテン"
        integer occupation_cd1 "ex: 100"
        integer occupation_cd2 "ex: 101"
        integer occupation_cd3 "ex: 102"
        text job_contents "ex: 寿司の調理・販売、接客業務"
        text salary "ex: 時給1260円～（月払い）"
        integer salary_type_cd "ex: 1→salary_type_master.salary_type_cd"
        integer min_salary "ex: 1260"
        integer max_salary "ex: null"
        string age "ex: 高校生OK"
        integer pref_cd FK "ex: 13→prefecture_master.pref_cd"
        integer city_cd FK "ex: 13113→city_master.city_cd"
        text hours "ex: 08:00～13:00,13:00～17:00"
        string area_eki "ex: 代々木エリア"
        integer station_cd "ex: 1001"
        string station_name_eki "ex: 代々木駅"
        string employment_type "ex: アルバイト"
        integer employment_type_cd FK "ex: 1→employment_type_master.employment_type_cd"
        text welfare "ex: 社割20%OFF、有給取得可能"
        text requirement "ex: 未経験歓迎、高校生OK"
        string url "ex: https://example.com/job/421505257"
        timestamptz start_at "ex: 2025-07-02 00:00:00+09"
        timestamptz end_at "ex: 2125-07-15 23:59:59+09"
        decimal latitude "ex: 35.661777"
        decimal longitude "ex: 139.704051"
        boolean is_correct_coordinate "ex: true"
        boolean inexperience_flg "ex: true"
        string feature_codes "ex: 100,103,104,106,201,206,301→feature_master.feature_cd"
        integer score "ex: 104983"
        integer fee "ex: 0"
        boolean is_delivery "ex: true"
        text score_factor "ex: location_match, salary_level"
        timestamptz created_at "ex: 2025-07-02 10:30:00+09"
        timestamptz updated_at "ex: 2025-08-15 14:20:00+09"
    }
    
    user_actions {
        uuid action_id PK "ex: 123e4567-e89b-12d3-a456-426614174000"
        uuid user_id FK "ex: 550e8400-e29b-41d4-a716-446655440000"
        bigint job_id FK "ex: 421505257"
        string action_type "ex: applied"
        timestamptz action_date "ex: 2024-08-20 16:45:00+09"
        jsonb context "ex: {device: mobile, source: email, session_id: sess_abc123}"
    }
    
    daily_job_picks {
        uuid pick_id PK "ex: 789e0123-e89b-12d3-a456-426614174000"
        uuid user_id FK "ex: 550e8400-e29b-41d4-a716-446655440000→users.user_id"
        bigint job_id FK "ex: 421505257→jobs.job_id"
        integer category_id FK "ex: 1→job_categories.category_id"
        date pick_date "ex: 2024-08-29"
        integer general_score "ex: 78"
        decimal category_match_score "ex: 85.5"
        decimal semrush_total_score "ex: 92.3"
        decimal personalized_score "ex: 88.7"
        jsonb keyword_scores "ex: {コンビニバイト: 85.5, 時給高め: 78.2, 駅近: 88.1}"
        jsonb classification_details "ex: {matched_criteria: [occupation_cd1, feature_codes], confidence: 0.9}"
        jsonb personalization_details "ex: {location_match: 0.9, salary_match: 0.8, experience_match: 1.0}"
        jsonb pick_metadata "ex: {algorithm_version: v2.1, total_candidates: 4655, user_rank: 5}"
        boolean is_selected "ex: true"
        timestamptz created_at "ex: 2024-08-29 03:00:00+09"
    }