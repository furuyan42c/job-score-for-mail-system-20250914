{
  "message_type": "TASK_ASSIGN",
  "timestamp": "2025-08-25T11:00:30.000Z",
  "from": "agent-orchestrator",
  "to": "thorough-todo-executor",
  "task_assignment": {
    "task_id": "TASK-3.2",
    "title": "Time Decay Model Implementation",
    "description": "Implement time decay model for weighting user actions by recency with 30-day half-life exponential decay",
    "file_path": "src/core/matching/time-decay-model.ts",
    "priority": "HIGH",
    "estimated_duration_min": 25,
    "dependencies": {
      "completed": ["TASK-3.1"],
      "required_files": [
        "src/core/matching/user-profiler.ts"
      ]
    },
    "requirements": {
      "functional": [
        "Implement exponential decay function with configurable half-life (default 30 days)",
        "Support different action types with base weights (apply=10, click=5, view=1)",
        "Calculate time-weighted scores for user behavior analysis",
        "Provide utilities for batch processing time decay calculations",
        "Support custom decay parameters for different use cases",
        "Optimize for performance with large datasets"
      ],
      "technical": [
        "TypeScript implementation with strict typing",
        "Mathematical accuracy for exponential decay calculations",
        "Memory-efficient batch processing support",
        "Comprehensive JSDoc documentation",
        "Error handling for edge cases (future dates, invalid inputs)",
        "Integration with existing user-profiler.ts"
      ],
      "performance": [
        "Efficient calculation for 10,000+ users",
        "Vectorized operations for batch processing",
        "Memory usage optimization",
        "Sub-millisecond decay calculation per item"
      ]
    },
    "acceptance_criteria": [
      "TimeDecayModel class with configurable parameters",
      "calculateDecay() method for single timestamp",
      "batchCalculateDecay() method for arrays",
      "Integration helper methods for user profiler",
      "Comprehensive unit tests with edge cases",
      "Performance benchmarks for large datasets",
      "Mathematical accuracy validation"
    ],
    "context": {
      "project_phase": "Phase 3 - User Matching System",
      "parallel_task": "TASK-3.3 (Geographic Matching)",
      "critical_path": true,
      "integration_points": ["user-profiler.ts", "collaborative-filter.ts"]
    }
  }
}
