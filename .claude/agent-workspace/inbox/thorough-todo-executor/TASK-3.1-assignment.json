{
  "message_type": "TASK_ASSIGN",
  "timestamp": "2025-08-25T10:30:30.000Z",
  "from": "agent-orchestrator",
  "to": "thorough-todo-executor",
  "task_assignment": {
    "task_id": "TASK-3.1",
    "title": "User Behavior Analysis Engine Implementation",
    "description": "Implement user behavior analysis engine for extracting user preferences from historical actions",
    "file_path": "src/core/matching/user-profiler.ts",
    "priority": "HIGH",
    "estimated_duration_min": 30,
    "dependencies": {
      "completed": ["TASK-1.9"],
      "required_files": [
        "src/data/repositories/user.repository.ts",
        "src/data/models/user.model.ts"
      ]
    },
    "requirements": {
      "functional": [
        "Analyze user_behaviors table for preference extraction",
        "Implement occupation preference calculation from historical apply/click/view actions",
        "Calculate salary preferences based on user's historical target ranges",
        "Determine location preferences (居住地 vs 勤務地 patterns)",
        "Extract work style preferences from feature_codes analysis",
        "Weight actions by type: apply=10, click=5, view=1",
        "Store results in users.preferences JSONB field"
      ],
      "technical": [
        "Use TypeScript strict mode",
        "Implement error handling and logging",
        "Add comprehensive JSDoc comments",
        "Follow existing code patterns in src/core/",
        "Use existing repository pattern from src/data/repositories/",
        "Include unit tests in __tests__/ directory"
      ],
      "performance": [
        "Support batch processing for multiple users",
        "Optimize for 10,000 user processing target",
        "Use efficient database queries with proper indexing",
        "Memory-efficient data structures for large datasets"
      ]
    },
    "acceptance_criteria": [
      "ProfileAnalyzer class with analyze() method implemented",
      "Support for time-weighted preference calculation",
      "Preference extraction for all 4 dimensions (職種・給与・地域・働き方)",
      "JSONB output compatible with users table schema",
      "Error handling for missing/invalid behavior data",
      "Unit tests with 80%+ coverage",
      "Performance benchmarks for batch processing"
    ],
    "context": {
      "project_phase": "Phase 3 - User Matching System",
      "next_tasks": ["TASK-3.2", "TASK-3.3"],
      "critical_path": true,
      "performance_target": "1-hour batch processing for 10K users"
    }
  }
}
